// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ping_a.proto

package protogen

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingAReq struct {
	Now                  int64    `protobuf:"varint,1,opt,name=now,proto3" json:"now,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingAReq) Reset()         { *m = PingAReq{} }
func (m *PingAReq) String() string { return proto.CompactTextString(m) }
func (*PingAReq) ProtoMessage()    {}
func (*PingAReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_999a30e8c9518ed2, []int{0}
}

func (m *PingAReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingAReq.Unmarshal(m, b)
}
func (m *PingAReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingAReq.Marshal(b, m, deterministic)
}
func (m *PingAReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingAReq.Merge(m, src)
}
func (m *PingAReq) XXX_Size() int {
	return xxx_messageInfo_PingAReq.Size(m)
}
func (m *PingAReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PingAReq.DiscardUnknown(m)
}

var xxx_messageInfo_PingAReq proto.InternalMessageInfo

func (m *PingAReq) GetNow() int64 {
	if m != nil {
		return m.Now
	}
	return 0
}

func (m *PingAReq) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type PingAResponse struct {
	Now                  int64    `protobuf:"varint,1,opt,name=now,proto3" json:"now,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingAResponse) Reset()         { *m = PingAResponse{} }
func (m *PingAResponse) String() string { return proto.CompactTextString(m) }
func (*PingAResponse) ProtoMessage()    {}
func (*PingAResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_999a30e8c9518ed2, []int{1}
}

func (m *PingAResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingAResponse.Unmarshal(m, b)
}
func (m *PingAResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingAResponse.Marshal(b, m, deterministic)
}
func (m *PingAResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingAResponse.Merge(m, src)
}
func (m *PingAResponse) XXX_Size() int {
	return xxx_messageInfo_PingAResponse.Size(m)
}
func (m *PingAResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingAResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingAResponse proto.InternalMessageInfo

func (m *PingAResponse) GetNow() int64 {
	if m != nil {
		return m.Now
	}
	return 0
}

func init() {
	proto.RegisterType((*PingAReq)(nil), "pb.PingAReq")
	proto.RegisterType((*PingAResponse)(nil), "pb.PingAResponse")
}

func init() { proto.RegisterFile("ping_a.proto", fileDescriptor_999a30e8c9518ed2) }

var fileDescriptor_999a30e8c9518ed2 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xc8, 0xcc, 0x4b,
	0x8f, 0x4f, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x32, 0xe0, 0xe2,
	0x08, 0xc8, 0xcc, 0x4b, 0x77, 0x0c, 0x4a, 0x2d, 0x14, 0x12, 0xe0, 0x62, 0xce, 0xcb, 0x2f, 0x97,
	0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x02, 0x31, 0x85, 0x84, 0xb8, 0x58, 0xd2, 0x8a, 0xf2, 0x73,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x45, 0x2e, 0x5e, 0xa8, 0x8e, 0xe2,
	0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x4c, 0x6d, 0x46, 0xc6, 0x5c, 0xac, 0x60, 0x25, 0x42, 0x5a, 0x30,
	0x06, 0x8f, 0x5e, 0x41, 0x92, 0x1e, 0xcc, 0x22, 0x29, 0x41, 0x24, 0x1e, 0xc4, 0x10, 0x25, 0x06,
	0x27, 0xae, 0x28, 0x0e, 0xb0, 0xb3, 0xd2, 0x53, 0xf3, 0x92, 0xd8, 0xc0, 0x2c, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xbb, 0x47, 0xf9, 0x39, 0xb0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PingAClient is the client API for PingA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingAClient interface {
	PingA(ctx context.Context, in *PingAReq, opts ...grpc.CallOption) (*PingAResponse, error)
}

type pingAClient struct {
	cc *grpc.ClientConn
}

func NewPingAClient(cc *grpc.ClientConn) PingAClient {
	return &pingAClient{cc}
}

func (c *pingAClient) PingA(ctx context.Context, in *PingAReq, opts ...grpc.CallOption) (*PingAResponse, error) {
	out := new(PingAResponse)
	err := c.cc.Invoke(ctx, "/pb.PingA/PingA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingAServer is the server API for PingA service.
type PingAServer interface {
	PingA(context.Context, *PingAReq) (*PingAResponse, error)
}

func RegisterPingAServer(s *grpc.Server, srv PingAServer) {
	s.RegisterService(&_PingA_serviceDesc, srv)
}

func _PingA_PingA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingAReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingAServer).PingA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PingA/PingA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingAServer).PingA(ctx, req.(*PingAReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PingA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PingA",
	HandlerType: (*PingAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingA",
			Handler:    _PingA_PingA_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ping_a.proto",
}
